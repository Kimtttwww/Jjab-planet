<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jobpostMapper">
	<resultMap id="postResultSet" type='jobPost' autoMapping="true">
		<id property="jobpostNo" column="JOBPOST_NO"/>
		<association property="corp" resultMap="boardMapper.corpResultMap"/>
	</resultMap>

	<!-- 리스트 목록 -->
	<select id="selectList" parameterType="hashmap" resultMap='postResultSet'>
		SELECT J.JOBPOST_NO, J.CORP_NO, J.POST_TITLE, J.POST_CONTENT, J.END_DATE, C.CORP_NAME, O.JOB_NAME, L.*
		FROM JOB_POST J
		LEFT JOIN corporation C ON J.CORP_NO=C.CORP_NO
		LEFT JOIN occupation O ON J.JOB_NO=O.JOB_NO
		LEFT JOIN LOGO L ON L.CORP_NO = C.CORP_NO
		WHERE STATUS = 'Y'
		<if test='!category.equals("A")'>
		    AND J.JOB_NO = #{category}
	    </if>
		<if test='!keyword.equals("NULLNULLNULLNULLNULL")'>
		    AND CORP_NAME LIKE '%${keyword}%'
	    </if>
	</select>
	
	<!-- corpNo의 리스트 목록 -->
	<select id="selectOne" parameterType="JobPost" resultMap='postResultSet'>
		SELECT J.*, C.*, O.*
		FROM JOB_POST J
		JOIN corporation C ON (J.CORP_NO=C.CORP_NO)
		JOIN occupation O ON (J.JOB_NO=O.JOB_NO)
	    WHERE C.CORP_NO = #{corpNo}
	    AND J.STATUS = 'Y'
	</select>

	<!-- 게시물 몇개인지 조회 -->
	<select id="selectListCount" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*)
		FROM JOB_POST J
		JOIN corporation C ON J.CORP_NO=C.CORP_NO
		WHERE STATUS='Y'
		<if test='!category.equals("A")'>
		    AND J.JOB_NO = #{category}
	    </if>
		<if test='!keyword.equals("NULLNULLNULLNULLNULL")'>
		    AND CORP_NAME LIKE '%${keyword}%'
	    </if>
	</select>

	<!-- 공고 상세보기 -->
	<select id="detailPost" resultMap='postResultSet'>
		SELECT J.*, C.*, O.*
		FROM JOB_POST J
		JOIN corporation C ON (J.CORP_NO=C.CORP_NO)
		JOIN occupation O ON (J.JOB_NO=O.JOB_NO)
		WHERE J.JOBPOST_NO = #{jobpostNo}
		AND J.STATUS = 'Y'
	</select>
	
	<!-- 공고 고치기 강민구-->
	<update id="updatePost" parameterType = 'jobPost'>
		UPDATE JOB_POST
			SET CAREER = #{career},
				EDUCATION = #{education},
				LOCATION = #{location},
				JOBPOST_NO = #{jobPostNo},
				END_DATE = #{endDate},
				POST_TITLE = #{postTitle},
				POST_CONTENT = #{postContent}
	</update>
	
	<!-- 기업 공고 생성 -->
		<insert id="insertPost" parameterType = 'jobPost'>
		INSERT INTO job_post(
				JOBPOST_NO,
				CORP_NO,
				POST_TITLE,
				POST_CONTENT,
				END_DATE,
				JOB_NO,
				CAREER,
				EDUCATION,
				"LOCATION"
			)
			VALUES(
				SEQ_JOB_POSTNO.nextval,
				#{corpNo},
				#{postTitle},
				#{postContent},
				#{endDate},
				#{jobNo},
				#{career},
				#{education},
				#{location}
			)
	</insert>
	
		<!-- 공고 상세보기 -->
	<select id="corpPostOne" resultMap='postResultSet'>
		SELECT
			JOBPOST_NO,
			CORP_NO,
			post_title,
			EDUCATION,
			CAREER,
			JOB_NAME,
			LOCATION,
			END_DATE,
			POST_CONTENT
		FROM JOB_POST J
		JOIN occupation O USING (JOB_NO)
		WHERE CORP_NO = #{corpCode}
		AND J.STATUS = 'Y'
	</select>
	

	<update id="increaseCount" parameterType="_int">
		UPDATE JOB_POST
		SET COUNT = COUNT +1
		WHERE JOBPOST_NO = #{jobpostNo}
		AND STATUS = 'Y'
	</update>

	<!-- 리스트 목록 -->
	<select id="idx_firstList" resultMap='postResultSet'>
		select * from(
		SELECT JOBPOST_NO, J.CORP_NO, C.CORP_NAME, POST_TITLE, JOB_NAME, END_DATE, COUNT, L.FILE_NO, L.ORIGIN_NAME, L.CHANGE_NAME
		FROM JOB_POST J
		JOIN occupation O ON (J.JOB_NO=O.JOB_NO)
		JOIN corporation C ON(C.CORP_NO=J.CORP_NO)
		JOIN LOGO L ON C.CORP_NO = L.CORP_NO
		ORDER BY count DESC)
		where ROWNUM &lt; 4
	</select>

	<select id="idx_secondList" resultMap='postResultSet'>
		select * from(
		SELECT JOBPOST_NO, J.CORP_NO, C.CORP_NAME, POST_TITLE, JOB_NAME, END_DATE, COUNT, L.FILE_NO, L.ORIGIN_NAME, L.CHANGE_NAME
		FROM JOB_POST J
		JOIN occupation O ON (J.JOB_NO=O.JOB_NO)
		JOIN corporation C ON(C.CORP_NO=J.CORP_NO)
		JOIN LOGO L ON C.CORP_NO = L.CORP_NO
		ORDER BY END_DATE DESC)
		where ROWNUM &lt; 7
	</select>

	<select id="idx_thirdList" resultMap='postResultSet'>
		select * from(
		SELECT JOBPOST_NO, J.CORP_NO, C.CORP_NAME, POST_TITLE, JOB_NAME, END_DATE, COUNT, L.FILE_NO, L.ORIGIN_NAME, L.CHANGE_NAME
		FROM JOB_POST J
		JOIN occupation O ON (J.JOB_NO=O.JOB_NO)
		JOIN corporation C ON(C.CORP_NO=J.CORP_NO)
		JOIN LOGO L ON C.CORP_NO = L.CORP_NO
		ORDER BY J.JOBPOST_NO DESC)
		where ROWNUM &lt; 10
	</select>
	
	<!-- 카테고리 -->
	<select id="getPostsByCategory" parameterType="string" resultMap="postResultSet">	
		SELECT *
		FROM JOB_POST
		WHERE JOB_NO = #{category}
	</select>
</mapper>